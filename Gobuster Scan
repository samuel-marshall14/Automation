import subprocess
import ipaddress
import shutil
import sys

# Function to validate network input
def is_valid_network(network):
    try:
        ipaddress.IPv4Network(network, strict=False)
        return True
    except ValueError:
        return False

# Prompt user for network input (providing an example but not defaulting)
while True:
    user_input = input("Enter target network (example: 192.168.1.0/24): ").strip()
    
    if user_input and is_valid_network(user_input):
        target_network = user_input
        break
    else:
        print("[!] Error: Invalid network. Please enter a valid network (e.g., 192.168.1.0/24).")

print(f"[*] Target network: {target_network}")

# Function to check/install Gobuster
def install_gobuster():
    if shutil.which("gobuster"):
        print("[*] Gobuster is already installed.")
        return True
    
    print("[*] Gobuster not found. Attempting to install...")
    try:
        subprocess.run(["sudo", "apt-get", "update"], check=True)
        subprocess.run(["sudo", "apt-get", "install", "-y", "gobuster"], check=True)
        print("[+] Gobuster installed successfully.")
        return True
    except subprocess.CalledProcessError:
        print("[-] Failed to install Gobuster. Please install it manually.")
        return False

# Run Gobuster on a given IP
def run_gobuster(ip):
    try:
        wordlist = "/usr/share/wordlists/dirb/common.txt"
        print(f"[*] Running Gobuster on http://{ip} ...")
        subprocess.run(["gobuster", "dir", "-u", f"http://{ip}", "-w", wordlist, "-q"], check=True)
    except subprocess.CalledProcessError:
        print(f"[-] Gobuster failed on {ip}")

def main():
    if not install_gobuster():
        print("[-] Gobuster is required but could not be installed. Exiting.")
        sys.exit(1)

    # Generate all hosts in the network
    network = ipaddress.IPv4Network(target_network, strict=False)
    hosts = [str(ip) for ip in network.hosts()]  # excludes network and broadcast address

    print(f"[*] Starting Gobuster scan on {len(hosts)} hosts in the network...")

    for ip in hosts:
        run_gobuster(ip)

if __name__ == "__main__":
    main()
